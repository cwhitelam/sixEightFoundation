@page "/contact"
@using SixEightFoundation.Models
@using SixEightFoundation.Services
@inject IEmailService EmailService

<PageTitle>Contact - I 6:8 Foundation</PageTitle>

<section id="contact" class="contact section-bg">
    <div class="container">
        <div class="section-title">
            <h2>Contact Us</h2>
            <p>Reach out to us for support or inquiries. We're here to help you on your journey to recovery.</p>
        </div>

        <div class="row justify-content-center">
            <div class="col-lg-8 d-flex align-items-stretch">
                <EditForm Model="@contactModel" OnValidSubmit="HandleSubmit" class="contact-form">
                    <DataAnnotationsValidator />
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label for="name">Your Name</label>
                            <InputText id="name" class="form-control" @bind-Value="contactModel.Name" />
                            <ValidationMessage For="@(() => contactModel.Name)" />
                        </div>
                        <div class="form-group col-md-6">
                            <label for="email">Your Email</label>
                            <InputText id="email" class="form-control" @bind-Value="contactModel.Email" />
                            <ValidationMessage For="@(() => contactModel.Email)" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="subject">Subject</label>
                        <InputText id="subject" class="form-control" @bind-Value="contactModel.Subject" />
                        <ValidationMessage For="@(() => contactModel.Subject)" />
                    </div>
                    <div class="form-group">
                        <label for="message">Message</label>
                        <InputTextArea id="message" class="form-control" @bind-Value="contactModel.Message" rows="10" />
                        <ValidationMessage For="@(() => contactModel.Message)" />
                    </div>
                    <div class="text-center">
                        <button type="submit" disabled="@isSubmitting">
                            @if (isSubmitting)
                            {
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                <span class="ms-2">Sending...</span>
                            }
                            else
                            {
                                <span>Send Message</span>
                            }
                        </button>
                    </div>
                    @if (submitMessage != null)
                    {
                        <div class="@(submitSuccess ? "alert alert-success" : "alert alert-danger") mt-3" role="alert">
                            @submitMessage
                        </div>
                    }
                </EditForm>
            </div>
        </div>
    </div>
</section>

<style>
    .contact {
        padding: 60px 0;
    }

    .section-title {
        text-align: center;
        padding-bottom: 30px;
    }

    .section-title h2 {
        font-size: 32px;
        font-weight: bold;
        text-transform: uppercase;
        margin-bottom: 20px;
        padding-bottom: 20px;
        position: relative;
        color: #37517e;
    }

    .section-title h2::before {
        content: "";
        position: absolute;
        display: block;
        width: 120px;
        height: 1px;
        background: #ddd;
        bottom: 1px;
        left: calc(50% - 60px);
    }

    .section-title h2::after {
        content: "";
        position: absolute;
        display: block;
        width: 40px;
        height: 3px;
        background: #5c9f24;
        bottom: 0;
        left: calc(50% - 20px);
    }

    .section-title p {
        margin-bottom: 0;
    }

    .contact .info {
        border-top: 3px solid #5c9f24;
        border-bottom: 3px solid #5c9f24;
        padding: 30px;
        background: #fff;
        width: 100%;
        box-shadow: 0 0 24px 0 rgba(0, 0, 0, 0.1);
    }

    .contact .info i {
        font-size: 20px;
        color: #5c9f24;
        float: left;
        width: 44px;
        height: 44px;
        background: #e7f5eb;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50px;
        transition: all 0.3s ease-in-out;
    }

    .contact .info h4 {
        padding: 0 0 0 60px;
        font-size: 22px;
        font-weight: 600;
        margin-bottom: 5px;
        color: #37517e;
    }

    .contact .info p {
        padding: 0 0 10px 60px;
        margin-bottom: 20px;
        font-size: 14px;
        color: #6182ba;
    }

    .contact .info .email p {
        padding-top: 5px;
    }

    .contact .info .support-hours:last-child p {
        margin-bottom: 0;
    }

    .contact .contact-form {
        width: 100%;
        border-top: 3px solid #5c9f24;
        border-bottom: 3px solid #5c9f24;
        padding: 30px;
        background: #fff;
        box-shadow: 0 0 24px 0 rgba(0, 0, 0, 0.12);
    }

    .contact .contact-form .form-group {
        padding-bottom: 8px;
    }

    .contact .contact-form .validate {
        display: none;
        color: red;
        margin: 0 0 15px 0;
        font-weight: 400;
        font-size: 13px;
    }

    .contact .contact-form .error-message {
        display: none;
        color: #fff;
        background: #ed3c0d;
        text-align: left;
        padding: 15px;
        font-weight: 600;
    }

    .contact .contact-form .sent-message {
        display: none;
        color: #fff;
        background: #18d26e;
        text-align: center;
        padding: 15px;
        font-weight: 600;
    }

    .contact .contact-form .loading {
        display: none;
        background: #fff;
        text-align: center;
        padding: 15px;
    }

    .contact .contact-form button[type="submit"] {
        background: #5c9f24;
        border: 0;
        padding: 12px 34px;
        color: #fff;
        transition: 0.4s;
        border-radius: 50px;
    }

    .contact .contact-form button[type="submit"]:hover {
        background: #209dd8;
    }

    .validation-message {
        color: #dc3545;
        font-size: 0.875em;
        margin-top: 0.25rem;
    }

    .form-control {
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        background-color: #fff;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .form-control:focus {
        color: #212529;
        background-color: #fff;
        border-color: #86b7fe;
        outline: 0;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }

    @@media (max-width: 768px) {
        .contact .info {
            padding: 20px;
        }

        .contact .contact-form {
            padding: 20px;
        }
    }
</style>

@code {
    private ContactFormModel contactModel = new();
    private bool isSubmitting = false;
    private string? submitMessage;
    private bool submitSuccess;

    private async Task HandleSubmit()
    {
        isSubmitting = true;
        submitMessage = null;

        try
        {
            var result = await EmailService.SendEmailAsync(
                contactModel.Name,
                contactModel.Email,
                contactModel.Subject,
                contactModel.Message
            );

            if (result)
            {
                submitSuccess = true;
                submitMessage = "Thank you for your message. We will get back to you soon!";
                contactModel = new ContactFormModel();
            }
            else
            {
                submitSuccess = false;
                submitMessage = "There was an error sending your message. Please try again later.";
            }
        }
        catch (Exception)
        {
            submitSuccess = false;
            submitMessage = "There was an error sending your message. Please try again later.";
        }
        finally
        {
            isSubmitting = false;
        }
    }
} 